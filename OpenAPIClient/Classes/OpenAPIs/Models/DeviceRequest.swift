//
// DeviceRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A request for devices to be sent to device drivers */
public struct DeviceRequest: Codable, JSONEncodable, Hashable {

    public var driver: String?
    public var count: Int?
    public var deviceIDs: [String]?
    /** A list of capabilities; an OR list of AND lists of capabilities.  */
    public var capabilities: [[String]]?
    /** Driver-specific options, specified as a key/value pairs. These options are passed directly to the driver.  */
    public var options: [String: String]?

    public init(driver: String? = nil, count: Int? = nil, deviceIDs: [String]? = nil, capabilities: [[String]]? = nil, options: [String: String]? = nil) {
        self.driver = driver
        self.count = count
        self.deviceIDs = deviceIDs
        self.capabilities = capabilities
        self.options = options
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case driver = "Driver"
        case count = "Count"
        case deviceIDs = "DeviceIDs"
        case capabilities = "Capabilities"
        case options = "Options"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(driver, forKey: .driver)
        try container.encodeIfPresent(count, forKey: .count)
        try container.encodeIfPresent(deviceIDs, forKey: .deviceIDs)
        try container.encodeIfPresent(capabilities, forKey: .capabilities)
        try container.encodeIfPresent(options, forKey: .options)
    }
}

