//
// Network.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Network: Codable, JSONEncodable, Hashable {

    public var name: String?
    public var id: String?
    public var created: String?
    public var scope: String?
    public var driver: String?
    public var enableIPv6: Bool?
    public var IPAM: IPAM?
    public var _internal: Bool?
    public var attachable: Bool?
    public var ingress: Bool?
    public var containers: [String: NetworkContainer]?
    public var options: [String: String]?
    public var labels: [String: String]?

    public init(name: String? = nil, id: String? = nil, created: String? = nil, scope: String? = nil, driver: String? = nil, enableIPv6: Bool? = nil, IPAM: IPAM? = nil, _internal: Bool? = nil, attachable: Bool? = nil, ingress: Bool? = nil, containers: [String: NetworkContainer]? = nil, options: [String: String]? = nil, labels: [String: String]? = nil) {
        self.name = name
        self.id = id
        self.created = created
        self.scope = scope
        self.driver = driver
        self.enableIPv6 = enableIPv6
        self.IPAM = IPAM
        self._internal = _internal
        self.attachable = attachable
        self.ingress = ingress
        self.containers = containers
        self.options = options
        self.labels = labels
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name = "Name"
        case id = "Id"
        case created = "Created"
        case scope = "Scope"
        case driver = "Driver"
        case enableIPv6 = "EnableIPv6"
        case IPAM
        case _internal = "Internal"
        case attachable = "Attachable"
        case ingress = "Ingress"
        case containers = "Containers"
        case options = "Options"
        case labels = "Labels"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(created, forKey: .created)
        try container.encodeIfPresent(scope, forKey: .scope)
        try container.encodeIfPresent(driver, forKey: .driver)
        try container.encodeIfPresent(enableIPv6, forKey: .enableIPv6)
        try container.encodeIfPresent(IPAM, forKey: .IPAM)
        try container.encodeIfPresent(_internal, forKey: ._internal)
        try container.encodeIfPresent(attachable, forKey: .attachable)
        try container.encodeIfPresent(ingress, forKey: .ingress)
        try container.encodeIfPresent(containers, forKey: .containers)
        try container.encodeIfPresent(options, forKey: .options)
        try container.encodeIfPresent(labels, forKey: .labels)
    }
}

