//
// OCIDescriptor.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A descriptor struct containing digest, media type, and size, as defined in the [OCI Content Descriptors Specification](https://github.com/opencontainers/image-spec/blob/v1.0.1/descriptor.md).  */
public struct OCIDescriptor: Codable, JSONEncodable, Hashable {

    /** The media type of the object this schema refers to.  */
    public var mediaType: String?
    /** The digest of the targeted content.  */
    public var digest: String?
    /** The size in bytes of the blob.  */
    public var size: Int64?

    public init(mediaType: String? = nil, digest: String? = nil, size: Int64? = nil) {
        self.mediaType = mediaType
        self.digest = digest
        self.size = size
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case mediaType
        case digest
        case size
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(mediaType, forKey: .mediaType)
        try container.encodeIfPresent(digest, forKey: .digest)
        try container.encodeIfPresent(size, forKey: .size)
    }
}

