//
// IPAM.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct IPAM: Codable, JSONEncodable, Hashable {

    /** Name of the IPAM driver to use. */
    public var driver: String? = "default"
    /** List of IPAM configuration options, specified as a map:  ``` {\"Subnet\": <CIDR>, \"IPRange\": <CIDR>, \"Gateway\": <IP address>, \"AuxAddress\": <device_name:IP address>} ```  */
    public var config: [IPAMConfig]?
    /** Driver-specific options, specified as a map. */
    public var options: [String: String]?

    public init(driver: String? = "default", config: [IPAMConfig]? = nil, options: [String: String]? = nil) {
        self.driver = driver
        self.config = config
        self.options = options
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case driver = "Driver"
        case config = "Config"
        case options = "Options"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(driver, forKey: .driver)
        try container.encodeIfPresent(config, forKey: .config)
        try container.encodeIfPresent(options, forKey: .options)
    }
}

