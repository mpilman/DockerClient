//
// TaskSpecContainerSpecPrivilegesSELinuxContext.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** SELinux labels of the container */
public struct TaskSpecContainerSpecPrivilegesSELinuxContext: Codable, JSONEncodable, Hashable {

    /** Disable SELinux */
    public var disable: Bool?
    /** SELinux user label */
    public var user: String?
    /** SELinux role label */
    public var role: String?
    /** SELinux type label */
    public var type: String?
    /** SELinux level label */
    public var level: String?

    public init(disable: Bool? = nil, user: String? = nil, role: String? = nil, type: String? = nil, level: String? = nil) {
        self.disable = disable
        self.user = user
        self.role = role
        self.type = type
        self.level = level
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case disable = "Disable"
        case user = "User"
        case role = "Role"
        case type = "Type"
        case level = "Level"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(disable, forKey: .disable)
        try container.encodeIfPresent(user, forKey: .user)
        try container.encodeIfPresent(role, forKey: .role)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(level, forKey: .level)
    }
}

