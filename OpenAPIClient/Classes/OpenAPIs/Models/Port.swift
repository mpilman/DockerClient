//
// Port.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** An open port on a container */
public struct Port: Codable, JSONEncodable, Hashable {

    public enum ModelType: String, Codable, CaseIterable {
        case tcp = "tcp"
        case udp = "udp"
        case sctp = "sctp"
    }
    /** Host IP address that the container's port is mapped to */
    public var IP: String?
    /** Port on the container */
    public var privatePort: Int
    /** Port exposed on the host */
    public var publicPort: Int?
    public var type: ModelType

    public init(IP: String? = nil, privatePort: Int, publicPort: Int? = nil, type: ModelType) {
        self.IP = IP
        self.privatePort = privatePort
        self.publicPort = publicPort
        self.type = type
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case IP
        case privatePort = "PrivatePort"
        case publicPort = "PublicPort"
        case type = "Type"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(IP, forKey: .IP)
        try container.encode(privatePort, forKey: .privatePort)
        try container.encodeIfPresent(publicPort, forKey: .publicPort)
        try container.encode(type, forKey: .type)
    }
}

