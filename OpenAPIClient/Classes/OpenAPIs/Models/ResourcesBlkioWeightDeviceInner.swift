//
// ResourcesBlkioWeightDeviceInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ResourcesBlkioWeightDeviceInner: Codable, JSONEncodable, Hashable {

    static let weightRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    public var path: String?
    public var weight: Int?

    public init(path: String? = nil, weight: Int? = nil) {
        self.path = path
        self.weight = weight
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case path = "Path"
        case weight = "Weight"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(path, forKey: .path)
        try container.encodeIfPresent(weight, forKey: .weight)
    }
}

