//
// EventActor.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Actor describes something that generates events, like a container, network, or a volume.  */
public struct EventActor: Codable, JSONEncodable, Hashable {

    /** The ID of the object emitting the event */
    public var ID: String?
    /** Various key/value attributes of the object, depending on its type.  */
    public var attributes: [String: String]?

    public init(ID: String? = nil, attributes: [String: String]? = nil) {
        self.ID = ID
        self.attributes = attributes
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case ID
        case attributes = "Attributes"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(ID, forKey: .ID)
        try container.encodeIfPresent(attributes, forKey: .attributes)
    }
}

