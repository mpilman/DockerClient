//
// HealthcheckResult.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** HealthcheckResult stores information about a single run of a healthcheck probe  */
public struct HealthcheckResult: Codable, JSONEncodable, Hashable {

    /** Date and time at which this check started in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds.  */
    public var start: Date?
    /** Date and time at which this check ended in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds.  */
    public var end: String?
    /** ExitCode meanings:  - `0` healthy - `1` unhealthy - `2` reserved (considered unhealthy) - other values: error running probe  */
    public var exitCode: Int?
    /** Output from last check */
    public var output: String?

    public init(start: Date? = nil, end: String? = nil, exitCode: Int? = nil, output: String? = nil) {
        self.start = start
        self.end = end
        self.exitCode = exitCode
        self.output = output
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case start = "Start"
        case end = "End"
        case exitCode = "ExitCode"
        case output = "Output"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(start, forKey: .start)
        try container.encodeIfPresent(end, forKey: .end)
        try container.encodeIfPresent(exitCode, forKey: .exitCode)
        try container.encodeIfPresent(output, forKey: .output)
    }
}

