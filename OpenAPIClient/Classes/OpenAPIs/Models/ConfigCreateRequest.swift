//
// ConfigCreateRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ConfigCreateRequest: Codable, JSONEncodable, Hashable {

    /** User-defined name of the config. */
    public var name: String?
    /** User-defined key/value metadata. */
    public var labels: [String: String]?
    /** Base64-url-safe-encoded ([RFC 4648](https://tools.ietf.org/html/rfc4648#section-5)) config data.  */
    public var data: String?
    public var templating: Driver?

    public init(name: String? = nil, labels: [String: String]? = nil, data: String? = nil, templating: Driver? = nil) {
        self.name = name
        self.labels = labels
        self.data = data
        self.templating = templating
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name = "Name"
        case labels = "Labels"
        case data = "Data"
        case templating = "Templating"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(labels, forKey: .labels)
        try container.encodeIfPresent(data, forKey: .data)
        try container.encodeIfPresent(templating, forKey: .templating)
    }
}

