//
// NetworkAttachmentConfig.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Specifies how a service should be attached to a particular network.  */
public struct NetworkAttachmentConfig: Codable, JSONEncodable, Hashable {

    /** The target network for attachment. Must be a network name or ID.  */
    public var target: String?
    /** Discoverable alternate names for the service on this network.  */
    public var aliases: [String]?
    /** Driver attachment options for the network target.  */
    public var driverOpts: [String: String]?

    public init(target: String? = nil, aliases: [String]? = nil, driverOpts: [String: String]? = nil) {
        self.target = target
        self.aliases = aliases
        self.driverOpts = driverOpts
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case target = "Target"
        case aliases = "Aliases"
        case driverOpts = "DriverOpts"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(target, forKey: .target)
        try container.encodeIfPresent(aliases, forKey: .aliases)
        try container.encodeIfPresent(driverOpts, forKey: .driverOpts)
    }
}

