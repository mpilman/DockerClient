//
// ThrottleDevice.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ThrottleDevice: Codable, JSONEncodable, Hashable {

    static let rateRule = NumericRule<Int64>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    /** Device path */
    public var path: String?
    /** Rate */
    public var rate: Int64?

    public init(path: String? = nil, rate: Int64? = nil) {
        self.path = path
        self.rate = rate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case path = "Path"
        case rate = "Rate"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(path, forKey: .path)
        try container.encodeIfPresent(rate, forKey: .rate)
    }
}

