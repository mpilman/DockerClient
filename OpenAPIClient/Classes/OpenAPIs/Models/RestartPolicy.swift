//
// RestartPolicy.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The behavior to apply when the container exits. The default is not to restart.  An ever increasing delay (double the previous delay, starting at 100ms) is added before each restart to prevent flooding the server.  */
public struct RestartPolicy: Codable, JSONEncodable, Hashable {

    public enum Name: String, Codable, CaseIterable {
        case empty = ""
        case no = "no"
        case always = "always"
        case unlessStopped = "unless-stopped"
        case onFailure = "on-failure"
    }
    /** - Empty string means not to restart - `no` Do not automatically restart - `always` Always restart - `unless-stopped` Restart always except when the user has manually stopped the container - `on-failure` Restart only when the container exit code is non-zero  */
    public var name: Name?
    /** If `on-failure` is used, the number of times to retry before giving up.  */
    public var maximumRetryCount: Int?

    public init(name: Name? = nil, maximumRetryCount: Int? = nil) {
        self.name = name
        self.maximumRetryCount = maximumRetryCount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name = "Name"
        case maximumRetryCount = "MaximumRetryCount"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(maximumRetryCount, forKey: .maximumRetryCount)
    }
}

