//
// ServiceServiceStatus.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The status of the service&#39;s tasks. Provided only when requested as part of a ServiceList operation.  */
public struct ServiceServiceStatus: Codable, JSONEncodable, Hashable {

    /** The number of tasks for the service currently in the Running state.  */
    public var runningTasks: Int?
    /** The number of tasks for the service desired to be running. For replicated services, this is the replica count from the service spec. For global services, this is computed by taking count of all tasks for the service with a Desired State other than Shutdown.  */
    public var desiredTasks: Int?
    /** The number of tasks for a job that are in the Completed state. This field must be cross-referenced with the service type, as the value of 0 may mean the service is not in a job mode, or it may mean the job-mode service has no tasks yet Completed.  */
    public var completedTasks: Int?

    public init(runningTasks: Int? = nil, desiredTasks: Int? = nil, completedTasks: Int? = nil) {
        self.runningTasks = runningTasks
        self.desiredTasks = desiredTasks
        self.completedTasks = completedTasks
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case runningTasks = "RunningTasks"
        case desiredTasks = "DesiredTasks"
        case completedTasks = "CompletedTasks"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(runningTasks, forKey: .runningTasks)
        try container.encodeIfPresent(desiredTasks, forKey: .desiredTasks)
        try container.encodeIfPresent(completedTasks, forKey: .completedTasks)
    }
}

